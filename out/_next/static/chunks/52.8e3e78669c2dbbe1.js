"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[52],{4052:(t,e,i)=>{i.r(e),i.d(e,{HapticsWeb:()=>n});var a=i(6267),r=i(9596);class n extends a.E_{constructor(){super(...arguments),this.selectionStarted=!1}async impact(t){let e=this.patternForImpact(null==t?void 0:t.style);this.vibrateWithPattern(e)}async notification(t){let e=this.patternForNotification(null==t?void 0:t.type);this.vibrateWithPattern(e)}async vibrate(t){let e=(null==t?void 0:t.duration)||300;this.vibrateWithPattern([e])}async selectionStart(){this.selectionStarted=!0}async selectionChanged(){this.selectionStarted&&this.vibrateWithPattern([70])}async selectionEnd(){this.selectionStarted=!1}patternForImpact(t=r.k.Heavy){return t===r.k.Medium?[43]:t===r.k.Light?[20]:[61]}patternForNotification(t=r._.Success){return t===r._.Warning?[30,40,30,50,60]:t===r._.Error?[27,45,50]:[35,65,21]}vibrateWithPattern(t){if(navigator.vibrate)navigator.vibrate(t);else throw this.unavailable("Browser does not support the vibrate API")}}}}]);